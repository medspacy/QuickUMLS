# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: test packaging

on:
  workflow_dispatch
  
permissions:
  contents: read

jobs:
  test-and-build:
    strategy:      
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8']
        # python-version: ['3.8', '3.9', '3.10', '3.11']
        spacy-version: [3.5, 3.6, 3.7]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --force-reinstall spacy==${{ matrix.spacy-version }}
          pip install pytest build

        
      - name: Check versions
        run: |
          python -c "import spacy; print('spacy version:', spacy.__version__)"
          python -c "import medspacy; print('medspacy version:', medspacy.__version__)"        
      

      - name: Run tests
        run: |
          python --version
          pip install ./          
          pytest tests/skiptest_spangroup1.py
          pytest tests/skiptest_spangroup2.py
          pytest tests/test_quickumls_component.py
          pytest tests/test_quickumls_spangroup.py
          pytest tests/test_basic.py

      - name: Build package (if on Linux)
        if: runner.os == 'Linux'
        run: python -m build
